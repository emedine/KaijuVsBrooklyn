var geocoder;
var map;
var markers = [];
var provider = "srtm";
var rectangle;
var tileSize = 256;

function CreatePOI(position, title)
{
    var marker = new google.maps.Marker({
        position: position,
        title: title,
        draggable:true
    });

    marker.setMap(map);
    markers.push(marker);
    
    google.maps.event.addListener(marker, 'drag', OnMarkerDrag);
    
    var markerPosition = "Lat: " + marker.position.lat() + ", Lng: " + marker.position.lng();
    var el = "<div class='poi'>";
    el += "<div class='poiIndex'>" + markers.length + "</div>";
    el += "<div class='poiTitle'>" + marker.title + "</div>";
    el += "<div class='poiPosition'>" + markerPosition + "</div>";
    el += "<div class='i2Style m5i poiDelete' title='Delete'>X</div>";
    el += "</div>";
    $("#poiContainer").append(el);
    
    $(".poiTitle:last").dblclick(OnPOITitleDoubleClick);
    $(".poiDelete:last").click(OnDeletePOI);
}

function AddPOI()
{
    CreatePOI(map.getCenter(), "New POI " + (markers.length + 1));
    
    $("#POIs").show("fast");
    UpdateInfo();
}

function OnChangeProvider()
{
    provider = $("#elevation-provider").find('option:selected').val();
    if (provider == "srtm") 
    {
        $("#btnShowLinks").show();
    }
    else 
    {
        $("#btnShowLinks").hide();
        $("#download-links").hide();
    }
    
    UpdateInfo();
}

function OnDeletePOI()
{
    var index = $(".poiDelete").index($(this));
    var marker = markers.splice(index, 1)[0];
    marker.setMap(null);
    $(this).parent().remove();
    
    if (markers.length > 0)
    {
        $(".poiIndex").each(function(index) {
            $(this).text(index + 1);
        })
    }
    else $("#POIs").hide("fast");
    UpdateInfo();
}

function OnKeyDown(event)
{
    console.log("OnKeyDown");
    if (event.ctrlKey == 1) rectangle.setMap(null);
}

function OnKeyUp(event)
{
    console.log("OnKeyUp");
    if (event.ctrlKey == 0) rectangle.setMap(map);
}

function OnPOITitleDoubleClick()
{
    var newTitle = prompt("POI title:", $(this).text());
    
    if (newTitle != null) 
    {
        $(this).text(newTitle);
        var index = $(".poiTitle").index($(this));
        markers[index].title = newTitle;
        UpdateInfo();
    }
}

function OnShowOSM()
{
    var center = map.getCenter();
    var win = window.open("http://www.openstreetmap.org/#map=" + map.getZoom() + "/" + center.lat() + "/" + center.lng(), '_blank');
    win.focus();
}

function OnMarkerDrag()
{
    var markerIndex = markers.indexOf(this);
    var markerPosition = "Lat: " + this.position.lat() + ", Lng: " + this.position.lng();
    $(".poi .poiPosition").eq(markerIndex).text(markerPosition);
    UpdateInfo();
}

function GenerateLinks()
{
    var bounds = rectangle.getBounds();
    var ne = bounds.getNorthEast();
    var sw = bounds.getSouthWest();
    var x1 = sw.lng();
    var x2 = ne.lng();
    var y1 = ne.lat();
    var y2 = sw.lat();
    var x1u = Math.floor(x1 / 5) * 5 + 180;
    var x2u = Math.floor(x2 / 5) * 5 + 180;
    var y1u = 90 - Math.floor(y1 / 5) * 5;
    var y2u = 90 - Math.floor(y2 / 5) * 5;

    $("#dlHeightmaps").text("");
    $("#dlTextures").text("");
    var server = "http://srtm.csi.cgiar.org/SRT-ZIP/SRTM_v41/SRTM_Data_ArcASCII/";

    for (var x = x1u; x <= x2u; x += 5)
    {
        for (var y = y1u; y <= y2u; y += 5)
        {
            var ax = Math.floor(x / 5 + 1);
            var ay = Math.floor(y / 5 - 6);
            var filename = "srtm_" + ((ax > 9)? ax: "0" + ax) + "_" + ((ay > 9)? ay: "0" + ay);
            var el = "<div><a href='" + server + filename + ".zip'><div class='i2Style dl-btn'>Download</div></a>" + filename + "</div>"
            $("#dlHeightmaps").append(el);
        }
    }

    $("#download-links").show("fast");
}

function Initialize() 
{
    var centerPoint = new google.maps.LatLng((Coords.tly + Coords.bry) / 2, (Coords.tlx + Coords.brx) / 2);

    var mapOptions = 
    {
        center: centerPoint,
        zoom: 9,
        zoomControl: true,
        zoomControlOptions: {
            style: google.maps.ZoomControlStyle.DEFAULT,
        },
        mapTypeControl: true,
        panControl: false,
        scaleControl: true,
        scrollwheel: true,
        streetViewControl: false,
        draggable : true,
        overviewMapControl: false,
        mapTypeId: google.maps.MapTypeId.HYBRID
    };

    var bounds = new google.maps.LatLngBounds(
        new google.maps.LatLng(Coords.bry, Coords.tlx),
        new google.maps.LatLng(Coords.tly, Coords.brx)
    );

    geocoder = new google.maps.Geocoder();
    map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
    map.fitBounds(bounds);

    rectangle = new google.maps.Rectangle({
        bounds: bounds,
        draggable: true,
        editable: true
    });

    rectangle.setMap(map);
    rectangle.addListener("bounds_changed", UpdateInfo);
    
    if (typeof(POI) != 'undefined')
    {
        for (var i = 0; i < POI.length; i++)
        {
            var p = POI[i];
            CreatePOI(new google.maps.LatLng(p.y, p.x), p.title);
        }
        if (POI.length > 0) $("#POIs").removeClass("hidden");
    }
    
    UpdateInfo();

    $("#search-address").keyup(function(event){
        if(event.keyCode == 13) $("#btnSearch").click();
    });

    $("#btnCreateSelector").click(ShowRectangle);
    $("#btnSearch").click(Search);
    $("#btnAddPOI").click(AddPOI);
    $("#btnShowLinks").click(GenerateLinks);
    $("#btnOpenOSM").click(OnShowOSM);
    $("#elevation-provider").change(OnChangeProvider);
}

function Repeat(value, minValue, maxValue)
{
    var range = maxValue - minValue;
    while (value < minValue || value > maxValue)
    {
        if (value < minValue) value += range;
        else value -= range;
    }
    return value;
}

function Search() 
{
    geocoder.geocode({'address': $("#search-address").val()}, 
        function(results, status) { 
            if (status == google.maps.GeocoderStatus.OK) { 
                var loc = results[0].geometry.location;
                map.panTo(loc);
            } 
            else {
                alert("Not found: " + status); 
            } 
        }
    );
}

function SelectText(containerid) 
{
    if (document.selection) 
    {
        var range = document.body.createTextRange();
        range.moveToElementText(document.getElementById(containerid));
        range.select();
    } 
    else if (window.getSelection) 
    {
        var range = document.createRange();
        range.selectNode(document.getElementById(containerid));
        window.getSelection().addRange(range);
    }
}

function ShowRectangle()
{
    var center = map.getCenter();
    var bounds = map.getBounds();
    var bne = bounds.getNorthEast();
    var bsw = bounds.getSouthWest();
    var x1 = Repeat(bsw.lng(), -180, 180);
    var y1 = Repeat(bne.lat(), -90, 90);
    var x2 = Repeat(bne.lng(), -180, 180);
    var y2 = Repeat(bsw.lat(), -90, 90);
    var cx = Repeat(center.lng(), -180, 180);
    var cy = Repeat(center.lat(), -90, 90);
    var ne = new google.maps.LatLng(cy + (y1 - cy) * 0.7, cx + (cx - x1) * 0.7);
    var sw = new google.maps.LatLng(cy + (y2 - cy) * 0.7, cx + (cx - x2) * 0.7);
    rectangle.setBounds(new google.maps.LatLngBounds(sw, ne));
    UpdateInfo();
    $("#map-coord").show("fast");
}

function UpdateInfo()
{
    var bounds = rectangle.getBounds();
    var ne = bounds.getNorthEast();
    var sw = bounds.getSouthWest();

    $("#TLLat").text(ne.lat());
    $("#TLLon").text(sw.lng());
    $("#BRLat").text(sw.lat());
    $("#BRLon").text(ne.lng());

    var D2R = Math.PI / 180.0;
    var R = 6371;

    var scfY = Math.sin(ne.lat() * D2R);
    var sctY = Math.sin(sw.lat() * D2R);
    var ccfY = Math.cos(ne.lat() * D2R);
    var cctY = Math.cos(sw.lat() * D2R);
    var cX = Math.cos((sw.lng() - ne.lng()) * D2R);
    var sizeX1 = Math.abs(R * Math.acos(scfY * scfY + ccfY * ccfY * cX));
    var sizeX2 = Math.abs(R * Math.acos(sctY * sctY + cctY * cctY * cX));
    sizeX = ((sizeX1 + sizeX2) / 2.0);
    sizeY = (R * Math.acos(scfY * sctY + ccfY * cctY));

    $("#AreaWidth").text(sizeX.toFixed(2));
    $("#AreaHeight").text(sizeY.toFixed(2));
    $("#AreaArea").text((sizeX * sizeY).toFixed(2));

    $("div").removeClass("wrong");
    var wrong = false;
    if (provider == "srtm")
    {
        if (ne.lat() > 60 || ne.lat() < -60) { $("#TLTitle").addClass("wrong"); wrong = true;}
        if (sw.lat() > 60 || sw.lat() < -60) { $("#BRTitle").addClass("wrong"); wrong = true;}
    }

    if (!wrong)
    {
        var hasMarkers = markers.length > 0;
        var str = '<Coords tlx="' + sw.lng() + '" tly="' + ne.lat() + '" brx="' + ne.lng() + '" bry="' + sw.lat() + '"' + (hasMarkers?"": "/") + '>';
        if (hasMarkers)
        {
            str += "<POIs>";
            
            for (var i = 0; i < markers.length; i++)
            {
                var marker = markers[i];
                str += '<POI x="' + marker.position.lng() + '" y="' + marker.position.lat() + '">' + marker.title + "</POI>";
            }
            
            str += "</POIs>";
            str += "</Coords>";
        }
        
        $("#coordNode").text(str);
    }
    else
    {
        $("#coordNode").text("Wrong latitude");
    }
}

function MoveSelectorDown()
{
    var bounds = rectangle.getBounds();
    var ne = bounds.getNorthEast();
    var sw = bounds.getSouthWest();

    var off = ne.lat() - sw.lat();

    var ne2 = new google.maps.LatLng(ne.lat() - off, ne.lng());
    var sw2 = new google.maps.LatLng(sw.lat() - off, sw.lng());

    rectangle.setBounds(new google.maps.LatLngBounds(sw2, ne2));
}

function MoveSelectorLeft()
{
    var bounds = rectangle.getBounds();
    var ne = bounds.getNorthEast();
    var sw = bounds.getSouthWest();

    var off = ne.lng() - sw.lng();

    var ne2 = new google.maps.LatLng(ne.lat(), ne.lng() - off);
    var sw2 = new google.maps.LatLng(sw.lat(), sw.lng() - off);

    rectangle.setBounds(new google.maps.LatLngBounds(sw2, ne2));
}

function MoveSelectorRight()
{
    var bounds = rectangle.getBounds();
    var ne = bounds.getNorthEast();
    var sw = bounds.getSouthWest();

    var off = ne.lng() - sw.lng();

    var ne2 = new google.maps.LatLng(ne.lat(), ne.lng() + off);
    var sw2 = new google.maps.LatLng(sw.lat(), sw.lng() + off);

    rectangle.setBounds(new google.maps.LatLngBounds(sw2, ne2));
}

function MoveSelectorUp()
{
    var bounds = rectangle.getBounds();
    var ne = bounds.getNorthEast();
    var sw = bounds.getSouthWest();

    var off = ne.lat() - sw.lat();

    var ne2 = new google.maps.LatLng(ne.lat() + off, ne.lng());
    var sw2 = new google.maps.LatLng(sw.lat() + off, sw.lng());

    rectangle.setBounds(new google.maps.LatLngBounds(sw2, ne2));
}

$(Initialize);